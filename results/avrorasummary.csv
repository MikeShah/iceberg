Critical Section Name:,# of method calls in first level,total # of method calls,# of synchronized method calls in first level,total # of sync method calls,Growth from first level,Number of allocations in first level,Total # of allocations,Growth from first level,total # lines of IR
"<avrora.actions.SimAction: void exitSimulation(java.lang.Throwable)>",1,6633,0,78,0.99984926,0,1673,1.0,30427
"<avrora.arch.ArchitectureRegistry: void addArchitectures()>",8,3008,0,36,0.99734044,2,940,0.9978769,22162
"<avrora.core.ControlFlowGraph: avrora.core.ProcedureMap getProcedureMap()>",2,7222,0,85,0.9997231,1,1848,0.99945915,35173
"<avrora.core.Program: avrora.core.ControlFlowGraph getCFG()>",2,9559,0,122,0.9997908,1,2339,0.99957263,45042
"<avrora.Defaults: void addActions()>",13,3380,0,27,0.99615383,2,861,0.9976825,25975
"<avrora.Defaults: void addAll()>",9,7416,9,90,0.9987864,0,2467,1.0,58644
"<avrora.Defaults: void addInputFormats()>",11,3086,0,27,0.9964355,2,835,0.9976105,23797
"<avrora.Defaults: void addMicrocontrollers()>",7,1171,0,19,0.9940222,4,309,0.98722047,8095
"<avrora.Defaults: void addMonitors()>",32,6173,0,27,0.9948161,2,1108,0.9981982,46666
"<avrora.Defaults: void addPlatforms()>",6,1096,0,10,0.99452555,1,188,0.994709,8626
"<avrora.Defaults: void addSimulations()>",8,2645,0,27,0.9969754,2,796,0.99749374,20530
"<avrora.Defaults: void addTestHarnesses()>",6,1096,0,10,0.99452555,1,188,0.994709,8626
"<avrora.Defaults: void addTopologies()>",7,2498,0,27,0.99719775,2,783,0.99745226,19441
"<avrora.gui.GraphEvents: boolean internalUpdate()>",3,7,0,0,0.5714286,0,0,0.0,52
"<avrora.gui.GraphEvents: void addToVector(int,int)>",1,2,0,0,0.5,0,0,0.0,22
"<avrora.gui.GraphEvents: void updateHorzBar()>",11,121,0,12,0.90909094,0,33,1.0,574
"<avrora.gui.GraphNumbers: boolean internalUpdate()>",2,14,0,0,0.85714287,1,9,0.9,75
"<avrora.gui.GraphNumbers: void recordNumber(int)>",1,6,0,0,0.8333333,0,2,1.0,69
"<avrora.gui.GraphNumbers: void updateHorzBar()>",10,118,0,12,0.91525424,0,33,1.0,556
"<avrora.gui.SimTimeEvents$PauseEvent: void fire()>",1,2,0,0,0.5,0,0,0.0,3
"<avrora.gui.SimTimeEvents$PauseEvent: void unpause()>",1,1,0,0,0.0,0,0,0.0,0
"<avrora.monitors.CallMonitor$Mon: void pop(int,java.lang.String,int)>",10,27297,0,395,0.99963367,0,6521,1.0,128840
"<avrora.monitors.CallMonitor$Mon: void push(int,int,java.lang.String,int,int)>",9,27293,0,395,0.99967027,0,6521,1.0,128812
"<avrora.monitors.SnifferMonitor$Mon: void fireAfterReceiveEnd(avrora.sim.radio.Medium$Receiver)>",4,13109,1,213,0.9996949,0,3230,1.0,62482
"<avrora.monitors.SnifferMonitor$Mon: void fireBeforeTransmitEnd(avrora.sim.radio.Medium$Transmitter)>",4,13117,1,212,0.99969506,0,3233,1.0,62515
"<avrora.sim.clock.BarrierSynchronizer$SynchEvent: void fire()>",2,7,0,0,0.71428573,0,0,0.0,44
"<avrora.sim.clock.BarrierSynchronizer: avrora.sim.clock.BarrierSynchronizer$WaitSlot checkWaiters()>",1,1,0,0,0.0,0,0,0.0,0
"<avrora.sim.clock.BarrierSynchronizer: void addNode(avrora.sim.Simulation$Node)>",6,180,0,0,0.96666664,1,19,0.95,1334
"<avrora.sim.clock.BarrierSynchronizer: void pause()>",1,8,0,1,0.875,0,5,1.0,40
"<avrora.sim.clock.BarrierSynchronizer: void removeNode(avrora.sim.Simulation$Node)>",4,25,0,0,0.84,0,0,0.0,234
"<avrora.sim.clock.BarrierSynchronizer: void start()>",5,34,1,1,0.85294116,0,13,1.0,214
"<avrora.sim.clock.BarrierSynchronizer: void stop()>",6,13,0,0,0.53846157,0,5,1.0,39
"<avrora.sim.clock.BarrierSynchronizer: void synch(long)>",1,8,0,1,0.875,0,5,1.0,40
"<avrora.sim.clock.BarrierSynchronizer: void waitForNeighbors(long)>",1,2,0,0,0.5,0,0,0.0,3
"<avrora.sim.clock.RippleSynchronizer$NotifyEvent: void fire()>",2,17,0,1,0.88235295,0,8,1.0,107
"<avrora.sim.clock.RippleSynchronizer: void addNode(avrora.sim.Simulation$Node)>",6,180,0,0,0.96666664,1,19,0.95,1334
"<avrora.sim.clock.RippleSynchronizer: void pause()>",1,8,0,1,0.875,0,5,1.0,40
"<avrora.sim.clock.RippleSynchronizer: void removeNode(avrora.sim.Simulation$Node)>",1,1,0,0,0.0,0,0,0.0,0
"<avrora.sim.clock.RippleSynchronizer: void start()>",5,34,1,1,0.85294116,0,13,1.0,214
"<avrora.sim.clock.RippleSynchronizer: void stop()>",6,13,0,0,0.53846157,0,5,1.0,39
"<avrora.sim.clock.RippleSynchronizer: void synch(long)>",1,8,0,1,0.875,0,5,1.0,40
"<avrora.sim.clock.RippleSynchronizer: void waitForNeighbors(long)>",3,37,0,2,0.9189189,0,19,1.0,217
"<avrora.sim.output.SimPrinter: void printBuffer(java.lang.StringBuffer)>",2,2947,1,50,0.99932134,0,679,1.0,14260
"<avrora.sim.output.SimPrinter: void println(java.lang.String)>",6,3162,2,68,0.9981025,1,749,0.99866664,15506
"<avrora.sim.platform.SerialLogger: void receiveFrame(avrora.sim.mcu.USART$Frame)>",3,5819,1,98,0.9994844,0,1324,1.0,28119
"<avrora.sim.radio.Medium$Receiver: avrora.sim.radio.Medium$Transmission earliestNewTransmission(long)>",7,7,0,0,0.0,0,0,0.0,8
"<avrora.sim.radio.Medium$Receiver: java.util.List getIntersection(long)>",6,10,0,0,0.4,1,4,0.8,29
"<avrora.sim.radio.Medium: avrora.sim.radio.Medium$Transmission newTransmission(avrora.sim.radio.Medium$Transmitter,double,double)>",2,6,0,0,0.6666667,1,1,0.5,41
"<avrora.sim.Simulation: avrora.sim.Simulation$Node createNode(avrora.sim.platform.PlatformFactory,avrora.core.LoadableProgram)>",2,11,0,0,0.8181818,0,8,1.0,53
"<avrora.sim.Simulation: avrora.sim.Simulation$Node getNode(int)>",0,0,0,0,0.0,0,0,0.0,0
"<avrora.sim.Simulation: void join()>",1,1,0,0,0.0,0,0,0.0,0
"<avrora.sim.Simulation: void pause()>",1,1,0,0,0.0,0,0,0.0,0
"<avrora.sim.Simulation: void removeNode(int)>",2,95,0,2,0.97894734,0,38,1.0,453
"<avrora.sim.Simulation: void resume()>",1,8,0,1,0.875,0,5,1.0,40
"<avrora.sim.Simulation: void start()>",2,6962,0,84,0.9997127,0,1820,1.0,32525
"<avrora.sim.Simulation: void stop()>",1,1,0,0,0.0,0,0,0.0,0
"<avrora.sim.Simulation: void stopNode(int)>",1,8,0,1,0.875,0,5,1.0,40
"<avrora.sim.util.MemPrint: void fireBeforeWrite(avrora.sim.State,int,byte)>",6,6147,3,101,0.9990239,0,1475,1.0,30035
"<cck.stat.Distribution: void record(int)>",5,7,0,0,0.2857143,0,0,0.0,121
"<cck.test.TestEngine: void finishTest(cck.test.TestCase)>",3,2918,0,48,0.9989719,0,649,1.0,14041
"<cck.test.TestEngine: void runAllTests()>",1,1,0,0,0.0,0,0,0.0,0
-,=SUM(B2:B61),=SUM(C2:C61),=SUM(D2:D61),=SUM(E2:E61),=AVERAGE(F2:F61),=SUM(G2:G61),=SUM(H2:H61),=AVERAGE(I2:I61),=SUM(J2:J61)