
import java.util.*;

import soot.*;
import soot.util.Chain;
import soot.jimple.*;
import soot.jimple.toolkits.pointer.*;
import soot.jimple.toolkits.thread.ThreadLocalObjectsAnalysis;
import soot.jimple.toolkits.thread.synchronization.*;
import soot.jimple.toolkits.thread.mhp.MhpTester;
import soot.jimple.toolkits.thread.mhp.SynchObliviousMhpAnalysis;
import soot.jimple.toolkits.callgraph.*;
import soot.jimple.toolkits.infoflow.*;
import soot.jimple.spark.pag.*;
import soot.jimple.spark.sets.*;
import soot.toolkits.scalar.*;
import soot.toolkits.graph.*;


public class MyMain
{
    public static boolean optionPrintDebug = true;
    public static boolean optionOpenNesting = false;
    public static void main(String[] args) {
	Transform t = new Transform("jtp.criticalsections", 
				    new BodyTransformer() {
					protected void internalTransform(Body body, String phase, Map options) {
					    ExceptionalUnitGraph eug = new ExceptionalUnitGraph(body);
					    ThreadLocalObjectsAnalysis tlo = null;
					    SynchronizedRegionFinder ta = new SynchronizedRegionFinder(eug, body, optionPrintDebug, optionOpenNesting, tlo);
					}
				    });
	PackManager.v().getPack("jtp").add(t);
	soot.Main.main(args);
    }
}
